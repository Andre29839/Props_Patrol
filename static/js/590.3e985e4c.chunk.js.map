{"version":3,"file":"static/js/590.3e985e4c.chunk.js","mappings":"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","sources":["redux/currencyRedusers/currencySelectors.js","components/Currency/Currency.styled.js","components/Currency/Currency.jsx","page/Currency/Currency.styled.js","page/Currency/Currency.jsx"],"sourcesContent":["export const currencySelector = state => state.currency.data;\n\nexport const isLoadingSelector = state => state.currency.isLoading;\n\nexport const selectCurrencyData = state => state.currency.data;\n\n","import { Dna } from 'react-loader-spinner';\nimport styled from 'styled-components';\n\nexport const WrapperCurrency = styled.div`\n  background: rgba(74, 86, 226, 0.1);\n`;\n\nexport const Usd = styled.span`\n  color: #ff868d;\n  position: absolute;\n  top: 120px;\n  left: 45px;\n`;\nexport const Eur = styled.span`\n  color: #ff868d;\n  position: absolute;\n\n  top: 88px;\n  right: 92px;\n`;\n\nexport const StyledBox = styled.div`\n  /* font-family: 'Poppins Regular', sans-serif; */\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  max-width: ${props => props.maxw || '480px'};\n`;\n\nexport const StyledTable = styled.div`\n  max-height: 170px;\n  width: 100%;\n\n  margin-bottom: 30px;\n`;\n\nexport const StyledTableHead = styled.div`\n  background: rgba(82, 59, 126, 0.6);\n  padding-left: ${props => props.padL || '62px'};\n  margin-bottom: ${props => props.marB || '24px'};\n`;\n\nexport const StyledThBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 50px;\n  padding: 16px 0;\n`;\n\nexport const StyledTdBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  text-align: start;\n  gap: 50px;\n`;\n\nexport const StyledTBody = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  padding-left: ${props => props.padL || '62px'};\n  gap: ${props => props.gap || '24px'};\n  margin-bottom: 6px;\n`;\n\nexport const StyledTh = styled.span`\n  color: var(--white, #fbfbfb);\n  /* font-family: 'Poppins SemiBold'; */\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: calc(16 / 24);\n  text-align: center;\n  &:last-child {\n  }\n  &:first-child {\n  }\n`;\n\nexport const StyledTd = styled.span`\n  display: inline-block;\n  color: var(--white, #fbfbfb);\n  /* font-family: 'Poppins Regular'; */\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: calc(24 / 16);\n  text-align: center;\n  width: 62px;\n  &:last-child {\n    width: 42px;\n  }\n  &:first-child {\n    width: 65px;\n  }\n`;\n\nexport const StyledOval = styled(Dna)`\n  filter: drop-shadow(0px 3px 10px rgba(74, 86, 226, 0.5));\n`;\n\nexport const StyledImg = styled.img`\n  display: inline-block;\n  width: ${props => props.w || '480px'};\n`;\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useMediaQuery } from 'react-responsive';\nimport {\n  currencySelector,\n  isLoadingSelector,\n} from 'redux/currencyRedusers/currencySelectors';\nimport { currencyThunk } from 'redux/currencyRedusers/currencyThunk';\nimport {\n  Eur,\n  StyledBox,\n  StyledImg,\n  StyledOval,\n  StyledTBody,\n  StyledTable,\n  StyledTableHead,\n  StyledTd,\n  StyledTdBox,\n  StyledTh,\n  StyledThBox,\n  Usd,\n  WrapperCurrency,\n} from './Currency.styled';\n\nconst Currency = () => {\n  const [currency, setCurrency] = useState([]);\n  const dispatch = useDispatch();\n  const selectedCurrency = useSelector(currencySelector);\n  const isLoading = useSelector(isLoadingSelector);\n  const token = useSelector(state => state.auth.token);\n\n  const currencyChart = useSelector(currencySelector);\n  const usdPurch = currencyChart[0]?.rateBuy.toFixed(2);\n  const eurPurch = currencyChart[1]?.rateBuy.toFixed(2);\n\n  const updateLastUpdatedTime = () => {\n    const newTime = Date.now();\n    localStorage.setItem('lastUpdatedTime', newTime);\n  };\n\n  useEffect(() => {\n    if (!token) return;\n    const lastUpdatedTime = localStorage.getItem('lastUpdatedTime');\n\n    const isHourPassed = () => {\n      const oneHourUpdate = 60 * 60 * 1000;\n      return Date.now() - Number(lastUpdatedTime) >= oneHourUpdate;\n    };\n\n    if (isHourPassed() || !lastUpdatedTime) {\n      dispatch(currencyThunk());\n      setCurrency(selectedCurrency);\n      updateLastUpdatedTime();\n    } else {\n      setCurrency(selectedCurrency);\n    }\n  }, [dispatch, selectedCurrency, token]);\n\n  const isMobile = useMediaQuery({ maxWidth: 767 });\n  const isTabletAndMobile = useMediaQuery({ minWidth: 768, maxWidth: 1279 });\n  const isDesktop = useMediaQuery({ minWidth: 1280 });\n\n  return (\n    <WrapperCurrency>\n      {isDesktop && (\n        <StyledBox ai=\"center\" jc=\"center\">\n          {isLoading ? (\n            <>\n              <StyledOval\n                height={40}\n                width={40}\n                color=\"#4a56e2\"\n                wrapperStyle={{}}\n                wrapperClass=\"\"\n                visible={true}\n                ariaLabel=\"oval-loading\"\n                secondaryColor=\"#4a56e2\"\n                strokeWidth={4}\n                strokeWidthSecondary={4}\n              />\n            </>\n          ) : (\n            <StyledBox>\n              <StyledTable>\n                <StyledTableHead>\n                  <StyledThBox>\n                    <StyledTh>Currency</StyledTh>\n                    <StyledTh>Purchase</StyledTh>\n                    <StyledTh>Sale</StyledTh>\n                  </StyledThBox>\n                </StyledTableHead>\n                <StyledTBody>\n                  {currency?.length &&\n                    currency.map(el => {\n                      return (\n                        <StyledTdBox key={el.rateBuy}>\n                          <StyledTd>{el.currencyName}</StyledTd>\n                          <StyledTd>{el.rateBuy}</StyledTd>\n                          <StyledTd>\n                            {el.rateSell.toString().slice(0, -2)}\n                          </StyledTd>\n                        </StyledTdBox>\n                      );\n                    })}\n                  <Usd>{usdPurch}</Usd>\n                  <Eur>{eurPurch}</Eur>\n                </StyledTBody>\n              </StyledTable>\n              <img\n                src={require('../../images/chart/chart-web.png')}\n                alt=\"chart\"\n              />\n            </StyledBox>\n          )}\n        </StyledBox>\n      )}\n      {isTabletAndMobile && (\n        <StyledBox maxw=\"336px\">\n          {isLoading ? (\n            <>\n              <StyledOval\n                height={40}\n                width={40}\n                color=\"#4a56e2\"\n                wrapperStyle={{}}\n                wrapperClass=\"\"\n                visible={true}\n                ariaLabel=\"oval-loading\"\n                secondaryColor=\"#4a56e2\"\n                strokeWidth={4}\n                strokeWidthSecondary={4}\n              />\n            </>\n          ) : (\n            <>\n              <StyledTable>\n                <StyledTableHead padL=\"20px\" marB=\"8px\">\n                  <StyledThBox>\n                    <StyledTh>Currency</StyledTh>\n                    <StyledTh>Purchase</StyledTh>\n                    <StyledTh>Sale</StyledTh>\n                  </StyledThBox>\n                </StyledTableHead>\n                <StyledTBody padL=\"20px\" gap=\"12px\">\n                  {currency?.length &&\n                    currency.map(el => {\n                      return (\n                        <StyledTdBox>\n                          <StyledTd>{el.currencyName}</StyledTd>\n                          <StyledTd>{el.rateBuy}</StyledTd>\n                          <StyledTd>\n                            {el.rateSell.toString().slice(0, -2)}\n                          </StyledTd>\n                        </StyledTdBox>\n                      );\n                    })}\n                </StyledTBody>\n              </StyledTable>\n              <StyledImg\n                src={require('../../images/chart/chart-tablet.png')}\n                alt=\"chart\"\n                w=\"336px\"\n              />\n            </>\n          )}\n        </StyledBox>\n      )}\n      {isMobile && (\n        <StyledBox maxw=\"336px\">\n          {isLoading ? (\n            <>\n              <StyledOval\n                height={40}\n                width={40}\n                color=\"#4a56e2\"\n                wrapperStyle={{}}\n                wrapperClass=\"\"\n                visible={true}\n                ariaLabel=\"oval-loading\"\n                secondaryColor=\"#4a56e2\"\n                strokeWidth={4}\n                strokeWidthSecondary={4}\n              />\n            </>\n          ) : (\n            <>\n              <StyledTable>\n                <StyledTableHead padL=\"20px\" marB=\"8px\">\n                  <StyledThBox>\n                    <StyledTh>Currency</StyledTh>\n                    <StyledTh>Purchase</StyledTh>\n                    <StyledTh>Sale</StyledTh>\n                  </StyledThBox>\n                </StyledTableHead>\n                <StyledTBody padL=\"20px\" gap=\"12px\">\n                  {currency?.length &&\n                    currency.map(el => {\n                      return (\n                        <StyledTdBox>\n                          <StyledTd>{el.currencyName}</StyledTd>\n                          <StyledTd>{el.rateBuy}</StyledTd>\n                          <StyledTd>\n                            {el.rateSell.toString().slice(0, -2)}\n                          </StyledTd>\n                        </StyledTdBox>\n                      );\n                    })}\n                </StyledTBody>\n              </StyledTable>\n              <StyledImg\n                src={require('../../images/chart/chart-tablet.png')}\n                alt=\"chart\"\n                w=\"336px\"\n              />\n            </>\n          )}\n        </StyledBox>\n      )}\n    </WrapperCurrency>\n  );\n};\n\nexport default Currency;\n","import styled from 'styled-components';\n\nexport const StyledBox = styled.div`\n  max-width: 480px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n","import Currency from 'components/Currency/Currency';\nimport { StyledBox } from './Currency.styled';\n\nconst CurrencyPage = () => {\n  return (\n    <div>\n      {' '}\n      <StyledBox>\n        <Currency />\n      </StyledBox>\n    </div>\n  );\n};\n\nexport default CurrencyPage;\n"],"names":["currencySelector","state","currency","data","isLoadingSelector","isLoading","WrapperCurrency","styled","_templateObject","_taggedTemplateLiteral","Usd","_templateObject2","Eur","_templateObject3","StyledBox","_templateObject4","props","maxw","StyledTable","_templateObject5","StyledTableHead","_templateObject6","padL","marB","StyledThBox","_templateObject7","StyledTdBox","_templateObject8","StyledTBody","_templateObject9","gap","StyledTh","_templateObject10","StyledTd","_templateObject11","StyledOval","Dna","_templateObject12","StyledImg","_templateObject13","w","_currencyChart$","_currencyChart$2","_useState","useState","_useState2","_slicedToArray","setCurrency","dispatch","useDispatch","selectedCurrency","useSelector","token","auth","currencyChart","usdPurch","rateBuy","toFixed","eurPurch","useEffect","lastUpdatedTime","localStorage","getItem","Date","now","Number","currencyThunk","newTime","setItem","updateLastUpdatedTime","isMobile","useMediaQuery","maxWidth","isTabletAndMobile","minWidth","isDesktop","_jsxs","children","_jsx","ai","jc","_Fragment","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","length","map","el","currencyName","rateSell","toString","slice","src","require","alt","Currency"],"sourceRoot":""}