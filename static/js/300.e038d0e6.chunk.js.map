{"version":3,"file":"static/js/300.e038d0e6.chunk.js","mappings":"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","sources":["Hooks/usePasswordToggle.js","components/FormError/FormError.styled.js","components/FormError/FormError.jsx","components/LoginForm/LoginForm.styled.js","components/Logo/Logo.styled.js","components/Logo/Logo.jsx","components/RegisterForm/RegisterForm.styled.js","components/TogglePasswordVisibility/TogglePasswordVisibility.jsx","services/validation/validationLoginSchema.js","components/LoginForm/LoginForm.jsx","page/LogIn/LogIn.styled.js","page/LogIn/LogIn.jsx"],"sourcesContent":["import { useState } from 'react';\n\nexport function usePasswordToggle(fields = []) {\n  const initialState = fields.reduce((acc, field) => {\n    acc[field] = false;\n    return acc;\n  }, {});\n\n  const [showPasswords, setShowPasswords] = useState(initialState);\n\n  const togglePasswordVisibility = field => {\n    setShowPasswords(prevState => ({\n      ...prevState,\n      [field]: !prevState[field],\n    }));\n  };\n\n  return { showPasswords, togglePasswordVisibility };\n}\n","import styled from 'styled-components';\n\nexport const ErrorText = styled.p`\n  color: ${({ theme }) => theme.colors.pink};\n  font-style: italic;\n  font-size: ${({ theme }) => theme.fontSizes.xs};\n  text-align: center;\n\n  @media screen and (max-width: 768px) {\n    width: 280px;\n    text-align: center;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { ErrorMessage } from 'formik';\nimport { ErrorText } from 'components/FormError/FormError.styled';\n\nexport const FormError = ({ name }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorText>{message}</ErrorText>}\n    />\n  );\n};\n\nFormError.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n","import { Field, Form } from 'formik';\nimport { FaEye, FaEyeSlash } from 'react-icons/fa';\nimport { IoMdMail, IoMdLock } from 'react-icons/io';\n\nimport styled from 'styled-components';\n\nexport const WrapperForm = styled.div`\n  padding: 96px 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  width: 100%;\n\n  @media (min-width: 320px) and (max-width: 767px) {\n    height: 100%;\n  }\n  @media (min-width: 768px) {\n    width: 533px;\n    padding: 80px 62px;\n  }\n  border-radius: ${({ theme }) => theme.radii.normal};\n  box-shadow: ${({ theme }) => theme.shadows.primary};\n  backdrop-filter: blur(60px);\n  background: rgba(0, 0, 0, 0.3);\n`;\n\nexport const FormStyled = styled(Form)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  gap: ${({ theme }) => theme.spacing(10)};\n`;\n\nexport const WrapperField = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n\nexport const FieldStyled = styled(Field)`\n  margin-top: 40px;\n  padding-left: 40px;\n  width: 280px;\n  height: ${({ theme }) => theme.spacing(9)};\n  outline: none;\n  border: none;\n  border-bottom: 2px solid grey;\n  background-color: rgba(255, 255, 255, 0);\n  color: grey;\n  @media (min-width: 768px) {\n    width: ${({ theme }) => theme.spacing(102)};\n  }\n  position: relative;\n  &:focus {\n    outline: none;\n    border: none;\n    border-bottom: 2px solid grey;\n  }\n`;\n\nexport const WrapperButton = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  gap: ${({ theme }) => theme.spacing(5)};\n`;\n\nexport const EmailIcon = styled(IoMdMail)`\n  height: 24px;\n\n  color: grey;\n  position: absolute;\n  left: 8px;\n  top: 74%;\n  transform: translateY(-50%);\n  pointer-events: none;\n  z-index: 1;\n`;\n\nexport const WrapperIcon = styled.div`\n  position: relative;\n`;\nexport const WrapperIcon2 = styled.div`\n  position: relative;\n`;\nexport const PasswordlIcon = styled(IoMdLock)`\n  height: 24px;\n  width: 24px;\n  color: grey;\n  position: absolute;\n  left: 8px;\n  top: 74%;\n  transform: translateY(-50%);\n  pointer-events: none;\n  z-index: 1;\n`;\nexport const WrapperIcon3 = styled.div`\n  position: relative;\n`;\n\nexport const PasswordlIconLook = styled.div`\n  height: 24px;\n  width: 24px;\n  color: grey;\n  position: absolute;\n  right: 0;\n  top: 63%;\n`;\n\nexport const FaEyeStyled = styled(FaEye)`\n  cursor: pointer;\n`;\n\nexport const FaEyeSlashStyled = styled(FaEyeSlash)`\n  cursor: pointer;\n`;\n","import styled from 'styled-components';\n\nexport const WrapperLogo = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  margin-bottom: 12px;\n`;\n\nexport const TitleLogo = styled.h2`\n  color: ${({ theme }) => theme.colors.primaryFont};\n  text-align: center;\n  font-family: ${({ theme }) => theme.fonts.regular};\n  font-size: 19px;\n  font-style: normal;\n  font-weight: 400;\n  margin-top: 8px;\n\n  letter-spacing: 1.8px;\n\n  cursor: pointer;\n\n  @media (min-width: 768px) {\n    font-size: 27px;\n  }\n`;\n","import React from 'react';\nimport { TitleLogo, WrapperLogo } from './Logo.styled';\n\nexport const Logo = () => {\n  return (\n    <WrapperLogo>\n      <img src=\"\" alt=\"MoneyGuard Logo\" />\n      <TitleLogo>Money Guard</TitleLogo>\n    </WrapperLogo>\n  );\n};\n","import { Link } from 'react-router-dom';\nimport { WrapperForm } from 'components/LoginForm/LoginForm.styled';\n\nimport { BiSolidUserRectangle } from 'react-icons/bi';\nimport styled from 'styled-components';\n\nexport const WrapperFormReg = styled(WrapperForm)`\n  padding: 60px 62px;\n`;\n\nexport const LinkStyled = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-width: ${({ theme }) => theme.spacing(75)};\n  min-height: ${({ theme }) => theme.spacing(12.5)};\n  margin-top: 20px;\n\n  text-align: center;\n  font-family: ${({ theme }) => theme.fonts.regular};\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  letter-spacing: 1.8px;\n  text-transform: uppercase;\n\n  color: ${({ theme }) => theme.colors.btnVioletText};\n  background: ${({ theme }) => theme.colors.btnWhiteBg};\n  border: ${({ theme }) => theme.borders.normal};\n  border-color: ${({ theme }) => theme.colors.blue};\n  border-radius: ${({ theme }) => theme.radii.button};\n  box-shadow: ${({ theme }) => theme.shadows.secondary};\n  cursor: pointer;\n  transition: transform 250ms ease-in-out;\n\n  &:focus,\n  &:hover {\n    border-radius: 18px;\n    border: 2px solid yellow;\n    transform: scale(1.01);\n    box-shadow: 1px 5px 8px 0px rgba(0, 0, 0, 0.5);\n  }\n`;\n\nexport const NameRegisterIcon = styled(BiSolidUserRectangle)`\n  height: 24px;\n  width: 24px;\n  color: grey;\n  position: absolute;\n  left: 8px;\n  top: 74%;\n  transform: translateY(-50%);\n  pointer-events: none;\n  z-index: 1;\n`;\n","import PropTypes from 'prop-types';\nimport { PasswordlIconLook } from 'components/LoginForm/LoginForm.styled';\nimport { FaEye, FaEyeSlash } from 'react-icons/fa';\n\nexport const TogglePasswordIcon = ({ showPassword, onToggle }) => {\n  return (\n    <PasswordlIconLook>\n      {showPassword ? (\n        <FaEye onClick={onToggle} />\n      ) : (\n        <FaEyeSlash onClick={onToggle} />\n      )}\n    </PasswordlIconLook>\n  );\n};\n\nTogglePasswordIcon.propTypes = {\n  onToggle: PropTypes.func.isRequired,\n  showPassword: PropTypes.bool.isRequired,\n};\n","import * as yup from 'yup';\n\nexport const loginSchema = yup.object().shape({\n  email: yup\n    .string()\n    .email('Please enter a valid email address')\n    .test('trim', 'The field must not start or end with spaces', value => {\n      if (value) {\n        return value.trim() === value;\n      }\n      return true;\n    })\n    .required('required field')\n    .max(30, 'the name must contain a maximum of 30 characters'),\n  password: yup\n    .string()\n    .test('trim', 'The field must not start or end with spaces', value => {\n      if (value) {\n        return value.trim() === value;\n      }\n      return true;\n    })\n    .required('required field')\n    .min(6, 'Password must contain at least 6 characters')\n    .max(12, 'Password must contain a maximum of 12 characters')\n    .matches(\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d|.*[!@#$%^&*()_+\\-=.<>])[a-zA-Z\\d!@#$%^&*()_+\\-=.<>]{6,12}$/,\n      'Password must contain at least one uppercase letter, one lowercase letter and one number'\n    ),\n});\n","import { Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { loginSchema } from 'services/validation/validationLoginSchema';\nimport { Logo } from 'components/Logo/Logo';\nimport { FormError } from 'components/FormError/FormError';\nimport { TogglePasswordIcon } from 'components/TogglePasswordVisibility/TogglePasswordVisibility';\nimport {\n  EmailIcon,\n  FieldStyled,\n  FormStyled,\n  PasswordlIcon,\n  WrapperButton,\n  WrapperField,\n  WrapperForm,\n  WrapperIcon,\n  WrapperIcon2,\n  WrapperIcon3,\n} from './LoginForm.styled';\nimport { LinkStyled } from 'components/RegisterForm/RegisterForm.styled';\nimport { usePasswordToggle } from 'Hooks/usePasswordToggle';\nimport { Button } from 'components/Button/Button';\nimport { logInThunk } from 'redux/registerReducers/registerThunks';\n\nexport const LoginForm = () => {\n  const { showPasswords, togglePasswordVisibility } = usePasswordToggle([\n    'password1',\n    'password2',\n  ]);\n  const dispatch = useDispatch();\n\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n\n  const handleSubmit = (value, { resetForm }) => {\n    dispatch(logInThunk(value))\n      .unwrap()\n      .then(data => {\n        resetForm();\n        toast.success(\n          `Well done, ${data.user.username}! You have signed in successfully.`\n        );\n      })\n      .catch(error => {\n        toast.error(error);\n      });\n  };\n\n  return (\n    <WrapperForm>\n      <Logo />\n      <Formik\n        initialValues={initialValues}\n        validationSchema={loginSchema}\n        onSubmit={handleSubmit}\n      >\n        <FormStyled>\n          <WrapperField>\n            <WrapperIcon>\n              <FieldStyled\n                type=\"email\"\n                name=\"email\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                placeholder=\"E-mail\"\n                autoComplete=\"off\"\n                required\n              />\n              <EmailIcon />\n            </WrapperIcon>\n            <FormError name=\"email\" />\n            <WrapperIcon3>\n              <WrapperIcon2>\n                <FieldStyled\n                  type={showPasswords.password1 ? 'text' : 'password'}\n                  name=\"password\"\n                  title=\"Enter the password more difficult, letter, digit, capital letter.\"\n                  placeholder=\"Password\"\n                  autoComplete=\"off\"\n                  required\n                />\n                <PasswordlIcon />\n              </WrapperIcon2>\n              <TogglePasswordIcon\n                showPassword={showPasswords.password1}\n                onToggle={() => togglePasswordVisibility('password1')}\n              />\n            </WrapperIcon3>\n            <FormError name=\"password\" />\n          </WrapperField>\n          <WrapperButton>\n            <Button type=\"submit\" text=\"log in\" />\n          </WrapperButton>\n        </FormStyled>\n      </Formik>\n      <LinkStyled to=\"/register\">Register</LinkStyled>\n    </WrapperForm>\n  );\n};\n","import styled from 'styled-components';\n\nexport const BgImage = styled.div`\n  max-width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  background-position: center;\n  background-repeat: no-repeat;\n\n  background: #302e32;\n\n  background-size: cover;\n  background-image: url();\n  @media (min-width: 768px) {\n    background-image: url();\n  }\n`;\n","import { LoginForm } from 'components/LoginForm/LoginForm';\nimport { BgImage } from './LogIn.styled';\n\nconst LogIn = () => {\n  return (\n    <BgImage>\n      <LoginForm />\n    </BgImage>\n  );\n};\n\nexport default LogIn;\n"],"names":["usePasswordToggle","fields","arguments","length","undefined","initialState","reduce","acc","field","_useState","useState","_useState2","_slicedToArray","showPasswords","setShowPasswords","togglePasswordVisibility","prevState","_objectSpread","_defineProperty","ErrorText","styled","_templateObject","_taggedTemplateLiteral","_ref","theme","colors","pink","_ref2","fontSizes","xs","FormError","name","_jsx","ErrorMessage","render","message","children","WrapperForm","radii","normal","shadows","primary","FormStyled","Form","_templateObject2","_ref3","spacing","WrapperField","_templateObject3","FieldStyled","Field","_templateObject4","_ref4","_ref5","WrapperButton","_templateObject5","_ref6","EmailIcon","IoMdMail","_templateObject6","WrapperIcon","_templateObject7","WrapperIcon2","_templateObject8","PasswordlIcon","IoMdLock","_templateObject9","WrapperIcon3","_templateObject10","PasswordlIconLook","_templateObject11","FaEye","_templateObject12","FaEyeSlash","_templateObject13","WrapperLogo","TitleLogo","primaryFont","fonts","regular","Logo","_jsxs","src","alt","LinkStyled","Link","btnVioletText","btnWhiteBg","borders","_ref7","blue","_ref8","button","_ref9","secondary","NameRegisterIcon","BiSolidUserRectangle","TogglePasswordIcon","showPassword","onToggle","onClick","loginSchema","yup","shape","email","test","value","trim","required","max","password","min","matches","LoginForm","_usePasswordToggle","dispatch","useDispatch","Formik","initialValues","validationSchema","onSubmit","resetForm","logInThunk","unwrap","then","data","toast","concat","user","username","catch","error","type","title","placeholder","autoComplete","password1","Button","text","to","BgImage"],"sourceRoot":""}