{"version":3,"file":"static/js/650.7251fd7c.chunk.js","mappings":"+PAEaA,EAAeC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,ygB,SCKtCC,EAAAA,GAAAA,SAAiBC,EAAAA,GAAYC,EAAAA,EAASC,EAAAA,IAEtC,I,MAAMC,EAAS,CACb,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WA2CF,EAzCc,SAAHC,GAAkB,IAAZC,EAAID,EAAJC,KACTC,GAAeC,EAAAA,EAAAA,IAAYC,EAAAA,IACjC,IAAKH,IAASA,EAAKI,mBAAuD,IAAlCJ,EAAKI,kBAAkBC,OAC7D,MAAO,iCAGT,IAEMC,EAAY,CAChBC,OAAQ,GACRC,SAAU,CACR,CACER,KANaA,EAAKI,kBAMDK,KAAI,SAAAC,GAAI,OAAIA,EAAKC,KAAK,IACvCC,gBAAiBd,EACjBe,YAAa,EACbC,OAAQ,SAgBd,OACEC,EAAAA,EAAAA,KAAA,OAAAC,UACEC,EAAAA,EAAAA,MAAC3B,EAAY,CAAA0B,SAAA,EACXD,EAAAA,EAAAA,KAACG,EAAAA,GAAQ,CAAClB,KAAMM,EAAWa,QAdjB,CACdC,YAAY,EACZN,OAAQ,MAERO,QAAS,CACPC,OAAQ,CACNC,SAAU,WASTvB,GAAOiB,EAAAA,EAAAA,MAAA,QAAAD,SAAA,CAAM,WAAIf,EAAauB,WAAkB,OAIzD,E,wCC3DaC,EAAYlC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+SAmBtBiC,EAAe,CAC1BC,UAAW,SAAAC,GAAQ,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACdD,GAAQ,IAEXE,UAAW,OACXC,WAAY,UACZC,SAAU,OACVC,OAAQ,+CACRC,aAAc,MACd,qCAAsC,CACpCC,SAAU,QACVC,MAAO,QAET,uCAAwC,CACtCD,SAAU,SAEZ,oCAAqC,CACnCA,SAAU,UACX,EAGHE,YAAa,SAAAT,GAAQ,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAChBD,GAAQ,IACXU,MAAO,eACPN,SAAU,OACVO,WAAY,QAAM,EAEpBC,QAAS,SAAAZ,GAAQ,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACZD,GAAQ,IACXa,WAAY,4BACZC,UAAW,OACXN,MAAO,QACPH,OAAQ,OACRU,UAAW,OACXC,OAAQ,IAER,+BAAgC,CAC9BR,MAAO,SAET,8BAA+B,CAC7BA,MAAO,UACR,EAEHS,OAAQ,SAACjB,EAAQ7B,GAAA,IAAI+C,EAAS/C,EAAT+C,UAAS,OAAAjB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACzBD,GAAQ,IACXmB,OAAQ,UACRnC,gBAAiBkC,EAAY,yBAA2B,cACxDR,MAAOQ,EAAY,wBAA0B,eAC7C,UAAW,CACTlC,gBAAiBkC,EAAY,yBAA2B,cACxDR,MAAOQ,EAAY,wBAA0B,gBAE/CE,UAAW,OACXC,YAAa,OACbjB,SAAU,QAAM,EAElBkB,KAAM,SAAAtB,GAAQ,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACTD,GAAQ,IACXoB,UAAW,SACXd,aAAc,MACdU,OAAQ,IACRH,WAAY,0BAAwB,EAEtCU,SAAU,SAAAvB,GAAQ,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACbD,GAAQ,IACXM,aAAc,MACdS,UAAW,uBACXS,eAAgB,aAChBtB,UAAW,QACX,uBAAwB,CACtBM,MAAO,OAGT,6BAA8B,CAC5BK,WAAY,eAGd,6BAA8B,CAC5BA,WAAY,oBAGd,mCAAoC,CAClCA,WAAY,qBACb,EAGHY,YAAa,SAAAzB,GAAQ,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAChBD,GAAQ,IACX0B,cAAe,MACfhB,MAAO,eACPN,SAAU,QAAM,EAElBuB,mBAAoB,SAAA3B,GAAQ,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACvBD,GAAQ,IACX4B,QAAS,QAAM,GC1CnB,EAnEmB,WACjB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,EAAO,IAAIC,KAEjBC,GAA0BC,EAAAA,EAAAA,UAASH,EAAKI,WAAa,GAAEC,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAAhDK,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAAwBN,EAAAA,EAAAA,UAASH,EAAKU,eAAcC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAA7CG,EAAID,EAAA,GAAEE,EAAOF,EAAA,IAUpBG,EAAAA,EAAAA,YAAU,WACRC,YAAW,WACTjB,GACEkB,EAAAA,EAAAA,IAA8B,CAC5BT,MAAOU,OAAOV,GACdK,KAAMK,OAAOL,KAGnB,GAAG,KACL,GAAG,CAACd,EAAUS,EAAOK,IAErB,IAeMM,GAAc,IAAIjB,MAAOS,cACzBS,EAAQC,MAAMC,KAAK,CAAE3E,OAAQwE,EAAc,KAAO,IAAK,SAACI,EAAGC,GAC/D,IAAMX,EAAOM,EAAcK,EAC3B,MAAO,CAAEC,MAAOZ,EAAMa,MAAOb,EAAKc,WACpC,IAEA,OACEpE,EAAAA,EAAAA,MAACQ,EAAS,CAAAT,SAAA,EACRD,EAAAA,EAAAA,KAACuE,EAAAA,GAAM,CACLnE,QAxBS,CACb,CAAEgE,MAAO,EAAGC,MAAO,WACnB,CAAED,MAAO,EAAGC,MAAO,YACnB,CAAED,MAAO,EAAGC,MAAO,SACnB,CAAED,MAAO,EAAGC,MAAO,SACnB,CAAED,MAAO,EAAGC,MAAO,OACnB,CAAED,MAAO,EAAGC,MAAO,QACnB,CAAED,MAAO,EAAGC,MAAO,QACnB,CAAED,MAAO,EAAGC,MAAO,UACnB,CAAED,MAAO,EAAGC,MAAO,aACnB,CAAED,MAAO,GAAIC,MAAO,WACpB,CAAED,MAAO,GAAIC,MAAO,YACpB,CAAED,MAAO,GAAIC,MAAO,aAahBG,OAAQ7D,EACR8D,SA7CoB,SAAAC,GACxBtB,EAASsB,EAAeN,MAC1B,EA4CM9B,YAAY,eACZqC,cAAc,KAEhB3E,EAAAA,EAAAA,KAACuE,EAAAA,GAAM,CACLnE,QAAS2D,EACTS,OAAQ7D,EACR8D,SAhDmB,SAAAC,GACvBjB,EAAQiB,EAAeN,MACzB,EA+CM9B,YAAY,cACZqC,cAAc,MAItB,E,UCrEaC,EAAkBpG,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wSAe3BmG,EAAoBrG,EAAAA,GAAAA,IAAUsG,IAAAA,GAAApG,EAAAA,EAAAA,GAAA,ilBCI3C,EAdmB,WACjB,IAAMqG,GAAS5F,EAAAA,EAAAA,IAAY6F,EAAAA,IAE3B,OACEhF,EAAAA,EAAAA,KAAAiF,EAAAA,SAAA,CAAAhF,UACEC,EAAAA,EAAAA,MAAC2E,EAAiB,CAAA5E,SAAA,EAChBD,EAAAA,EAAAA,KAAC4E,EAAe,CAAA3E,SAAC,gBACjBD,EAAAA,EAAAA,KAACkF,EAAK,CAACjG,KAAM8F,KACb/E,EAAAA,EAAAA,KAACmF,EAAU,QAInB,C","sources":["components/Chart/Chart.styled.js","components/Chart/Chart.jsx","components/DataForm/DataForm.styled.js","components/DataForm/DataForm.jsx","page/Statistics/Statistics.styled.js","page/Statistics/Statistics.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ChartWrapper = styled.div`\n  position: relative;\n  display: flex;\n  width: 280px;\n  height: 280px;\n  margin-bottom: 32px;\n\n  span {\n    position: absolute;\n    display: flex;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    font-size: 18px;\n    font-style: normal;\n    font-weight: 600;\n    color: var(--white);\n  }\n  @media only screen and (min-width: 768px) {\n    width: 336px;\n    height: 336px;\n  }\n  @media only screen and (min-width: 1280px) {\n    width: 288px;\n    height: 288px;\n  }\n`;\n","import React from 'react';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport { selectAuthData } from 'redux/registerReducers/registerSelector';\nimport { useSelector } from 'react-redux';\nimport { ChartWrapper } from './Chart.styled';\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nconst colors = [\n  '#9575CD',\n  '#64B5F6',\n  '#E57373',\n  '#00897B',\n  '#4CAF50',\n  '#DCE775',\n  '#1A237E',\n  '#FFE082',\n  '#FF8A65',\n  '#8D6E63',\n  '#546E7A',\n];\nconst Chart = ({ data }) => {\n  const totalBalance = useSelector(selectAuthData);\n  if (!data || !data.categoriesSummary || data.categoriesSummary.length === 0) {\n    return \"You don't have any expence now\";\n  }\n\n  const categories = data.categoriesSummary;\n\n  const chartData = {\n    labels: '',\n    datasets: [\n      {\n        data: categories.map(item => item.total),\n        backgroundColor: colors,\n        borderWidth: 0,\n        cutout: '70%',\n      },\n    ],\n  };\n\n  const options = {\n    responsive: true,\n    cutout: '70%',\n\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n    },\n  };\n\n  return (\n    <div>\n      <ChartWrapper>\n        <Doughnut data={chartData} options={options} />\n        {data ? <span> â‚´ {totalBalance.balance}</span> : ''}\n      </ChartWrapper>\n    </div>\n  );\n};\n\nexport default Chart;\n","import styled from 'styled-components';\n\nexport const SelectBox = styled.div`\n  display: flex;\n\n  @media screen and (max-width: 767.9px) {\n    gap: 20px;\n    flex-direction: column;\n    align-items: center;\n  }\n\n  @media screen and (max-width: 1279.9px) {\n    gap: 16px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    gap: 32px;\n    width: 182px;\n  }\n`;\n\nexport const customSelect = {\n  container: provided => ({\n    ...provided,\n\n    maxHeight: '50px',\n    fontFamily: 'Poppins',\n    fontSize: '16px',\n    border: '1px solid var(--white-60, --transparency-60)',\n    borderRadius: '8px',\n    '@media screen (max-width: 767.9px)': {\n      maxWidth: '440px',\n      width: '100%',\n    },\n    '@media screen  (max-width: 1279.9px)': {\n      maxWidth: '160px',\n    },\n    '@media screen (min-width: 1280px)': {\n      maxWidth: '182px',\n    },\n  }),\n\n  singleValue: provided => ({\n    ...provided,\n    color: 'var(--white)',\n    fontSize: '16px',\n    marginLeft: '20px',\n  }),\n  control: provided => ({\n    ...provided,\n    background: 'var(--control-background)',\n    minHeight: '50px',\n    width: '182px',\n    border: 'none',\n    boxShadow: 'none',\n    margin: '0',\n\n    '@media (max-width: 1279.9px)': {\n      width: '160px',\n    },\n    '@media (max-width: 767.9px)': {\n      width: '280px',\n    },\n  }),\n  option: (provided, { isFocused }) => ({\n    ...provided,\n    cursor: 'pointer',\n    backgroundColor: isFocused ? 'var(--transparency-10)' : 'transparent',\n    color: isFocused ? 'var(--dashboard-text)' : 'var(--white)',\n    '&:hover': {\n      backgroundColor: isFocused ? 'var(--transparency-10)' : 'transparent',\n      color: isFocused ? 'var(--dashboard-text)' : 'var(--white)',\n    },\n    textAlign: 'left',\n    paddingLeft: '20px',\n    fontSize: '16px',\n  }),\n  menu: provided => ({\n    ...provided,\n    textAlign: 'center',\n    borderRadius: '8px',\n    margin: '0',\n    background: 'var(--menu-background)',\n  }),\n  menuList: provided => ({\n    ...provided,\n    borderRadius: '8px',\n    boxShadow: 'var(--header-shadow)',\n    backdropFilter: 'blur(50px)',\n    maxHeight: '157px',\n    '&::-webkit-scrollbar': {\n      width: '4px',\n    },\n\n    '&::-webkit-scrollbar-track': {\n      background: 'transparent',\n    },\n\n    '&::-webkit-scrollbar-thumb': {\n      background: 'var(--menu-list)',\n    },\n\n    '&::-webkit-scrollbar-thumb:hover': {\n      background: 'var(--menu-list)',\n    },\n  }),\n\n  placeholder: provided => ({\n    ...provided,\n    paddingBottom: '2px',\n    color: 'var(--white)',\n    fontSize: '16px',\n  }),\n  indicatorSeparator: provided => ({\n    ...provided,\n    display: 'none',\n  }),\n};\n","import { useEffect, useState } from 'react';\nimport Select from 'react-select';\nimport { useDispatch } from 'react-redux';\nimport { getTransactionsStatisticThunk } from 'redux/transactionsRedusers/transactionsThunks';\nimport { SelectBox, customSelect } from './DataForm.styled';\n\nconst DatePicker = () => {\n  const dispatch = useDispatch();\n  const date = new Date();\n\n  const [month, setMonth] = useState(date.getMonth() + 1);\n  const [year, setYear] = useState(date.getFullYear());\n\n  const handleMonthChange = selectedOption => {\n    setMonth(selectedOption.value);\n  };\n\n  const handleSelectYear = selectedOption => {\n    setYear(selectedOption.value);\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      dispatch(\n        getTransactionsStatisticThunk({\n          month: Number(month),\n          year: Number(year),\n        })\n      );\n    }, 1500);\n  }, [dispatch, month, year]);\n\n  const months = [\n    { value: 1, label: 'January' },\n    { value: 2, label: 'February' },\n    { value: 3, label: 'March' },\n    { value: 4, label: 'April' },\n    { value: 5, label: 'May' },\n    { value: 6, label: 'June' },\n    { value: 7, label: 'July' },\n    { value: 8, label: 'August' },\n    { value: 9, label: 'September' },\n    { value: 10, label: 'October' },\n    { value: 11, label: 'November' },\n    { value: 12, label: 'December' },\n  ];\n\n  const currentYear = new Date().getFullYear();\n  const years = Array.from({ length: currentYear - 1990 + 1 }, (_, index) => {\n    const year = currentYear - index;\n    return { value: year, label: year.toString() };\n  });\n\n  return (\n    <SelectBox>\n      <Select\n        options={months}\n        styles={customSelect}\n        onChange={handleMonthChange}\n        placeholder=\"Select month\"\n        isSearchable={false}\n      />\n      <Select\n        options={years}\n        styles={customSelect}\n        onChange={handleSelectYear}\n        placeholder=\"Select year\"\n        isSearchable={false}\n      />\n    </SelectBox>\n  );\n};\n\nexport default DatePicker;\n","import styled from 'styled-components';\n\nexport const TitleStatistics = styled.h2`\n  font-size: 30px;\n  font-weight: 400;\n  margin-top: 40px;\n  margin-bottom: 8px;\n  color: var(--white);\n  @media only screen and (min-width: 768px) {\n    margin-top: 20px;\n    margin-bottom: 20px;\n  }\n  @media only screen and (min-width: 1280px) {\n    margin-top: 32px;\n  }\n`;\n\nexport const StatisticsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  -webkit-box-pack: center;\n  justify-content: center;\n  -webkit-box-align: center;\n  align-items: center;\n  padding-left: 20px;\n  padding-right: 20px;\n\n  @media only screen and (min-width: 768px) {\n    flex-direction: row;\n    align-items: flex-start;\n    -webkit-box-pack: justify;\n    justify-content: space-between;\n    gap: 32px;\n    padding-left: 0;\n    padding-right: 0;\n  }\n\n  @media only screen and (min-width: 1280px) {\n    justify-content: flex-start;\n    padding-left: 70px;\n    padding-right: 28px;\n  }\n`;\n","import Chart from 'components/Chart/Chart';\nimport DatePicker from 'components/DataForm/DataForm';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectTransactionsSummary } from 'redux/transactionsRedusers/transactionsSelectors';\nimport { StatisticsWrapper, TitleStatistics } from './Statistics.styled';\n\nconst Statistics = () => {\n  const result = useSelector(selectTransactionsSummary);\n\n  return (\n    <>\n      <StatisticsWrapper>\n        <TitleStatistics>Statistics</TitleStatistics>\n        <Chart data={result} />\n        <DatePicker />\n      </StatisticsWrapper>\n    </>\n  );\n};\n\nexport default Statistics;\n"],"names":["ChartWrapper","styled","_templateObject","_taggedTemplateLiteral","ChartJS","ArcElement","Tooltip","Legend","colors","_ref","data","totalBalance","useSelector","selectAuthData","categoriesSummary","length","chartData","labels","datasets","map","item","total","backgroundColor","borderWidth","cutout","_jsx","children","_jsxs","Doughnut","options","responsive","plugins","legend","position","balance","SelectBox","customSelect","container","provided","_objectSpread","maxHeight","fontFamily","fontSize","border","borderRadius","maxWidth","width","singleValue","color","marginLeft","control","background","minHeight","boxShadow","margin","option","isFocused","cursor","textAlign","paddingLeft","menu","menuList","backdropFilter","placeholder","paddingBottom","indicatorSeparator","display","dispatch","useDispatch","date","Date","_useState","useState","getMonth","_useState2","_slicedToArray","month","setMonth","_useState3","getFullYear","_useState4","year","setYear","useEffect","setTimeout","getTransactionsStatisticThunk","Number","currentYear","years","Array","from","_","index","value","label","toString","Select","styles","onChange","selectedOption","isSearchable","TitleStatistics","StatisticsWrapper","_templateObject2","result","selectTransactionsSummary","_Fragment","Chart","DatePicker"],"sourceRoot":""}